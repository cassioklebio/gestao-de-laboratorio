{"version":3,"file":"474.ec2b04f3eb3cc1d6.js","mappings":"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","names":["constructor","nomeVidraria","codigo","volume","fundo","gargalo","cor","temperatura","this","VidrariaService","httpClient","HttpHeaders","set","create","data","post","URL","pipe","catchError","handleError","getById","id","get","list","update","put","headers","delete","error","ErrorEvent","console","message","status","throwError","i0","factory","ListagemComponent","ngOnInit","selectors","routes","path","component","vidrariaService","vidraria","Vidraria","listVidrarias","onSubmit","subscribe","response","limpar","isShowMessage","isSuccess","edit","listaVidrarias","CadastroComponent","ctx","route","router","params","vidrariaId","getBy","listVidrariaEdit","navigate","EditComponent","listVidrariaDetalhe","log","DetalheComponent","VidrariaRoutingModule","RouterModule","VidrariaModule","FormBuilder","HttpClientModule","imports","CommonModule","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/model/vidrarias.entities.ts","./src/app/vidraria/vidraria.service.ts","./src/app/vidraria/listagem/listagem.component.html","./src/app/vidraria/listagem/listagem.component.ts","./src/app/vidraria/cadastro/cadastro.component.html","./src/app/vidraria/vidraria.routing.module.ts","./src/app/vidraria/cadastro/cadastro.component.ts","./src/app/vidraria/edit/edit.component.ts","./src/app/vidraria/edit/edit.component.html","./src/app/vidraria/detalhe/detalhe.component.ts","./src/app/vidraria/detalhe/detalhe.component.html","./src/app/vidraria/vidraria.module.ts"],"sourcesContent":["export class Vidraria {\n    id?: number;\n    nomeVidraria?: string;\n    codigo?: string;\n    volume?: string;\n    fundo?: string;\n    gargalo?: string;\n    cor?: string;\n    temperatura?: string;\n\n    constructor(\n        nomeVidraria: string,\n        codigo: string,\n        volume: string,\n        fundo: string,\n        gargalo: string,\n        cor: string,\n        temperatura: string,\n    ) {\n       \n        this.nomeVidraria = nomeVidraria;\n        this.codigo = codigo;\n        this.volume = volume;\n        this.fundo = fundo;\n        this.gargalo = gargalo;\n        this.cor = cor;\n        this.temperatura = temperatura;\n    }\n\n\n\n}\n\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Vidraria } from '../model/vidrarias.entities';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VidrariaService {\n\n  URL = 'http://localhost:3000/vidraria';\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  vidrarias: Vidraria[] = [];\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  //Save vidraria\n  create(data: any): Observable<any> {\n    let API_URL = `${this.URL}`;\n    return this.httpClient.post(API_URL, data)\n      .pipe(\n        catchError(this.handleError)\n      )\n\n  }\n\n  //Lista uma vidraria \n  getById(id: number): Observable<any> {\n    let API_URL = `${this.URL}/${id}`;\n    return this.httpClient.get<any>(API_URL)\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Listagem de Vidraria\n  list() {\n    return this.httpClient.get(`${this.URL}`).pipe(catchError(this.handleError));\n  }\n\n  // atualizar Vidraria\n  update(id: number, data: Vidraria): Observable<any> {\n    let API_URL = `${this.URL}/${id}`;\n    return this.httpClient.put(API_URL, data, { headers: this.headers }).pipe();\n\n  }\n\n  // Delete equipamento\n  delete(id: number): Observable<any> {\n    var API_URL = `${this.URL}/${id}`;\n    return this.httpClient.delete(API_URL).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Ops! Ocorreu um erro:', error.error.message);\n    } else {\n      console.error(\n        `Código retornado de back-end ${error.status}, ` +\n        `corpo é: ${error.error}`);\n    }\n    return throwError(\n      'Algo ruím aconteceu; por favor, tente novamente mais tarde.');\n  };\n\n\n\n  // addVidraria(vidraria: Vidraria) {\n  //   this.vidrarias.push(vidraria);\n  //   if(localStorage.getItem(Constants.VIDRARIA_KEY) === null) {\n  //     this.vidrarias.push(vidraria)!;\n  //     localStorage.setItem(Constants.VIDRARIA_KEY, JSON.stringify(this.vidrarias));\n  //   } else {\n  //     this.vidrarias = JSON.parse(localStorage.getItem(Constants.VIDRARIA_KEY)!);\n  //     this.vidrarias.push(vidraria)!; \n  //     localStorage.setItem(Constants.VIDRARIA_KEY, JSON.stringify(this.vidrarias));\n  //   }\n  // }\n}\n","<div class=\"container\">\n   <div class=\"section\">\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Vidrarias cadastrados</p>\n\n                        </div>\n                        <div class=\"card-action\">\n\n                            <table class=\"bordered striped centered highlight responsive-table\">\n                                <thead class=\"striped\">\n                                    <tr>\n                                        <th>Nome</th>\n                                        <th>Codigo</th>\n                                        <th>Volume</th>\n                                        <th>Fundo</th>\n                                        <th>Gargalo</th>\n                                        <th>Cor</th>\n                                        <th>Temperatura</th>\n                                        <th>Ações</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody *ngFor=\"let item of listaVidrarias\">\n                                    <tr>\n                                        <td>{{item.nomeVidraria | uppercase}}</td>\n                                        <td>{{item.codigo}}</td>\n                                        <td>{{item.volume}}</td>\n                                        <td>{{item.fundo}}</td>\n                                        <td>{{item.gargalo}}</td>\n                                        <td>{{item.cor}}</td>\n                                        <td>{{item.temperatura}}</td>\n                                        <td><a [routerLink]=\"['../detalhe/',item.id]\"><span class=\"material-icons-outlined\">image_search</span></a>\n                                            <a   [routerLink]=\"['../edit/',item.id]\">\n                                              <span class=\"material-icons\" >edit</span></a>  \n                                              <span class=\"material-icons\">delete</span></td>\n                                    </tr>\n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n    <br><br>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Vidraria } from 'src/app/model/vidrarias.entities';\n\n@Component({\n  selector: 'app-listagem',\n  templateUrl: './listagem.component.html',\n  styleUrls: ['./listagem.component.css']\n})\nexport class ListagemComponent implements OnInit {\n\n  @Input() listaVidrarias!: Vidraria[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col s11 m11 l11\">\n            <h6>Painel > Vidraria > Cadastro</h6>\n        </div>\n    </div>\n    <div class=\"section\">\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Cadastrado de Vidraria</p>\n                        </div>\n                        <div class=\"card-action\">\n                            <div id=\"msg-login\" class=\"card-panel white-text\" [class.red]=\"!this.isSuccess\"\n                            [class.blue]=\"this.isSuccess\" *ngIf=\"this.isShowMessage\">\n                            {{ this.message }}\n                        </div>\n                            <form #form=\"ngForm\" (submit)=\"onSubmit()\" novalidate class=\"row col s12 l12\">\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"nomeVidraria\" name=\"nomeVidraria\" [(ngModel)]=\"this.vidraria.nomeVidraria\" type=\"text\" class=\"validate\"\n                                        pattern=\"(\\s?[A-ZÀ-Ú][a-zà-ú])+(\\s?([A-ZÀ-Ú]|[a-zà-ú]|-|\\d))+\"                                           \n                                        #ngVidra=\"ngModel\" required>\n                                        <label for=\"nomeVidraria\">Nome</label>\n                                        <span [hidden]=\"ngVidra.valid|| ngVidra.untouched\">\n                                            Por favor, informe o nome da vidraria.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"codigo\" name=\"codigo\" [(ngModel)]=\"this.vidraria.codigo\" type=\"text\" class=\"validate\"\n                                        #ngCodigo=\"ngModel\" required>\n                                        <label for=\"codigo\">Codigo</label>\n                                        <span [hidden]=\"ngCodigo.valid|| ngCodigo.untouched\">\n                                            Por favor, informe o código da vidraria.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"volume\" name=\"volume\" [(ngModel)]=\"this.vidraria.volume\" type=\"text\" class=\"validate\"\n                                        #ngVolum=\"ngModel\" required>\n                                        <label for=\"volume\">Volume(ml)</label>\n                                        <span [hidden]=\"ngVolum.valid|| ngVolum.untouched\">\n                                            Por favor, informe o volume da vidraria.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"fundo\" name=\"fundo\" [(ngModel)]=\"this.vidraria.fundo\" type=\"text\" class=\"validate\"\n                                        #ngFund=\"ngModel\" required>\n                                        <label for=\"fundo\">Fundo</label>\n                                        <span [hidden]=\"ngFund.valid|| ngFund.untouched\">\n                                            Por favor, informe o tipo de fundo da vidraria.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"gargalo\" name=\"gargalo\" [(ngModel)]=\"this.vidraria.gargalo\" type=\"text\" class=\"validate\"\n                                        #ngGargal=\"ngModel\" required>\n                                        <label for=\"gargalo\">Gargalo</label>\n                                        <span [hidden]=\"ngGargal.valid|| ngGargal.untouched\">\n                                            Por favor, informe o tipo de gargalo da vidraria.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"cor\" name=\"cor\" [(ngModel)]=\"this.vidraria.cor\" type=\"text\" class=\"validate\"\n                                        #ngCor=\"ngModel\" required>\n                                        <label for=\"cor\">Cor</label>\n                                        <span [hidden]=\"ngCor.valid|| ngCor.untouched\">\n                                            Por favor, informe a cor da vidraria.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"temperatura\" name=\"temperatura\" [(ngModel)]=\"this.vidraria.temperatura\" \n                                        type=\"text\" class=\"validate\" \n                                        #ngTemp=\"ngModel\" required>\n                                        <label for=\"temperatura\">Temperatura(C)</label>\n                                        <span [hidden]=\"ngTemp.valid|| ngTemp.untouched\">\n                                            Por favor, informe a temperatura que a vidraria suporta.\n                                        </span>\n                                    </div>\n                                </div>\n                                <button class=\"waves-effect waves-light btn red\" [disabled]=\"!form.valid\">Salvar</button>\n                                <button type=\"button\" class=\"waves-effect waves-light btn red\" (click)=\"limpar()\">Limpar</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n<app-listagem\n[listaVidrarias] = \"listaVidrarias\"\n></app-listagem>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CadastroComponent } from \"./cadastro/cadastro.component\";\nimport { EditComponent } from \"./edit/edit.component\";\nimport { ListagemComponent } from \"./listagem/listagem.component\";\nimport { DetalheComponent } from './detalhe/detalhe.component';\n\nconst routes: Routes = [\n    \n    {\n        path: \"listagem\",\n        component: ListagemComponent,\n        \n      },\n      {\n        path: \"cadastro\",\n        component: CadastroComponent,\n        \n      },\n      {\n        path: \"edit/:id\",\n        component: EditComponent,\n        \n      },\n      {\n        path: \"detalhe/:id\",\n        component: DetalheComponent,\n        \n      }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class VidrariaRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { Vidraria } from 'src/app/model/vidrarias.entities';\nimport { VidrariaService } from '../vidraria.service';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n  vidraria!: Vidraria;\n  \n\n  isSubmitted!: boolean;\n  isShowMessage: boolean = false;\n  isShowCadastro: boolean = true;\n  isShowDetalhe: boolean = false;\n  isSuccess!: boolean;\n  message!: string;\n\n\n \n  listaVidrarias: any = []\n\n\n\n  constructor(\n    private vidrariaService: VidrariaService\n  ) { }\n\n  ngOnInit(): void {\n   this.vidraria = new Vidraria('','','','','','','');\n   this.listVidrarias();\n  }\n\n  // função de cadastro de equipamento para o json serve\n  onSubmit(){\n    this.vidrariaService.create(this.vidraria).subscribe((response)=>{\n      this.listVidrarias();\n      this.limpar();\n      this.isShowMessage = true;\n      this.isSuccess = true;\n      this.message = 'Cadastro da Vidraria realizado com sucesso!';\n    },(error=>{\n\n    }));\n  }\n\n  edit(vidraria: any){\n    this.vidrariaService.update(vidraria.id,vidraria).subscribe((response)=>{\n      this.listVidrarias();\n    },(error=>{\n\n    }));\n  }\n\n  \n\n  // lista dos os equipamentos cadastrados\n  listVidrarias(){\n    this.vidrariaService.list().subscribe((response)=>{\n      this.listaVidrarias = response;\n    });\n  }\n\n  limpar(): void {\n    this.vidraria.nomeVidraria = \"\";\n    this.vidraria.codigo = '';\n    this.vidraria.volume = '';\n    this.vidraria.fundo = '';\n    this.vidraria.gargalo = '';\n    this.vidraria.cor = '';\n    this.vidraria.temperatura = '';\n  \n  }\n\n    // onSubmit(): void { \n  //   this.isSubmitted = true;   \n  //   this.vidrariaService.addVidraria(this.vidraria);\n  //   this.limpar();\n  //   this.isShowMessage = true;\n  //   this.isSuccess = true;\n  //   this.message = 'Cadastro do Vidraria realizado com sucesso!';\n  //   this.vidraria = new Vidraria('','','','','','','');\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Vidraria } from 'src/app/model/vidrarias.entities';\nimport { VidrariaService } from '../vidraria.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  listVidrariaEdit: any = []\n  vidrariaId: any = 0;\n\n  vidraria!: Vidraria;\n\n  constructor(private vidrariaService: VidrariaService,\n    private route: ActivatedRoute,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => this.vidrariaId  = params['id'])\n    this.getBy(this.vidrariaId);\n    \n  }\n\n  getBy(vidrariaId: number){\n    this.vidrariaService.getById(vidrariaId).subscribe((response)=>{\n     this.listVidrariaEdit = response;\n     \n   });\n }\n\n edit(){\n  this.router.navigate(['/vidraria/cadastro']);\n  this.vidrariaService.update(this.vidrariaId,this.listVidrariaEdit).subscribe((response)=>{\n   \n },(error=>{\n\n }));\n}\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col s11 m11 l11\">\n            <h6>Painel > Vidraria > Editar</h6>\n        </div>\n    </div>\n    <div class=\"section\">\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Cadastrado de Vidraria</p>\n                        </div>\n                        <div class=\"card-action\">\n                            <form formGroup=\"vidrariaForm\" novalidate class=\"row col s12 l12\">\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"nomeVidraria\"  type=\"text\" class=\"validate\" value=\"{{listVidrariaEdit.nomeVidraria}}\">\n                                        <label for=\"nomeVidraria\">Nome</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"codigo\"  type=\"text\" class=\"validate\" value=\"{{listVidrariaEdit.codigo}}\">\n                                        <label for=\"codigo\">Codigo</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"volume\"  type=\"text\" class=\"validate\" value=\"{{listVidrariaEdit.volume}}\">\n                                        <label for=\"volume\">Volume(ml)</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"fundo\"  type=\"text\" class=\"validate\"  value=\"{{listVidrariaEdit.fundo}}\">\n                                        <label for=\"fundo\">Fundo</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"gargalo\"  type=\"text\" class=\"validate\"  value=\"{{listVidrariaEdit.gargalo}}\">\n                                        <label for=\"gargalo\">Gargalo</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"cor\"   type=\"text\" class=\"validate\"  value=\"{{listVidrariaEdit.cor}}\">\n                                        <label for=\"cor\">Cor</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"temperatura\"  type=\"text\" class=\"validate\" value=\"{{listVidrariaEdit.temperatura}}\">\n                                        <label for=\"temperatura\">Temperatura(C)</label>\n                                    </div>\n                                </div>\n                                <button (click)=\"edit()\" class=\"waves-effect waves-light btn red\">Salvar</button>\n                                <button [routerLink]=\"['../../cadastro']\"type=\"button\" class=\"waves-effect waves-light btn red\">Cancelar</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { VidrariaService } from '../vidraria.service';\n\n@Component({\n  selector: 'app-detalhe',\n  templateUrl: './detalhe.component.html',\n  styleUrls: ['./detalhe.component.css']\n})\nexport class DetalheComponent implements OnInit {\n\n  listVidrariaDetalhe: any = []\n  vidrariaId: any = 0;\n\n  constructor(private vidrariaService: VidrariaService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => this.vidrariaId  = params['id'])\n    this.getBy(this.vidrariaId);\n  }\n\n  getBy(vidrariaId: number){\n    this.vidrariaService.getById(vidrariaId).subscribe((response)=>{\n     this.listVidrariaDetalhe = response;\n     console.log(this.listVidrariaDetalhe);\n   });\n }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col s11 m11 l11\">\n            <h6>Painel > Vidraria > Detalhe</h6>\n        </div>\n    </div>\n    <div class=\"section\">\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Detalhe de Vidraria</p>\n                        </div>\n                        <div class=\"card-action\">\n                           \n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"nomeVidraria\">Nome: {{listVidrariaDetalhe.nomeVidraria}}</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"codigo\">Codigo: {{listVidrariaDetalhe.codigo}}</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"volume\">Volume(ml): {{listVidrariaDetalhe.volume}}</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"fundo\">Fundo: {{listVidrariaDetalhe.fundo}}</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"gargalo\">Gargalo: {{listVidrariaDetalhe.gargalo}}</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"cor\">Cor: {{listVidrariaDetalhe.cor}}</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"temperatura\">Temperatura(C): {{listVidrariaDetalhe.temperatura}}</label>\n                                    </div>\n                                </div>\n                                \n                                <a [routerLink]=\"['../../cadastro/']\" type=\"button\" class=\"waves-effect waves-light btn red\">Fechar</a>\n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CadastroComponent } from './cadastro/cadastro.component';\nimport { ListagemComponent } from './listagem/listagem.component';\nimport { EditComponent } from './edit/edit.component';\nimport { VidrariaRoutingModule } from './vidraria.routing.module';\nimport { FormBuilder, FormsModule } from '@angular/forms';\nimport { DetalheComponent } from './detalhe/detalhe.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { VidrariaService } from './vidraria.service';\n\n\n\n@NgModule({\n  declarations: [\n    CadastroComponent,\n    ListagemComponent,\n    EditComponent,\n    DetalheComponent\n  ],\n  imports: [\n    CommonModule,\n    VidrariaRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [    \n    FormBuilder,\n    HttpClientModule,\n    VidrariaService\n  ]\n})\nexport class VidrariaModule { }\n"]}