{"version":3,"file":"738.783158de0b43b5ed.js","mappings":"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","names":["constructor","nomeEquipamento","modelo","serie","fabricante","voltagem","this","EquipamentoService","httpClient","HttpHeaders","set","create","data","post","URL","pipe","catchError","handleError","getById","id","get","list","update","put","headers","delete","error","ErrorEvent","console","message","status","throwError","i0","factory","ListagemComponent","ngOnInit","selectors","CadastroComponent","equipamentoService","equipamento","Equipamento","listEquipamentos","limpar","subscribe","response","listaEquipamento","onSubmit","isShowMessage","isSuccess","edit","ctx","DetalheComponent","route","params","equipamentoId","getBy","listEquipamentosDetalhe","routes","path","component","redirectTo","router","listEquipamentosEdit","navigate","EditComponent","EquipamentoRoutingModule","RouterModule","EquipamentoModule","FormBuilder","HttpClientModule","imports","CommonModule","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/model/equipamentos.entities.ts","./src/app/equipamento/equipamento.service.ts","./src/app/equipamento/cadastro/listagem/listagem.component.html","./src/app/equipamento/cadastro/listagem/listagem.component.ts","./src/app/equipamento/cadastro/cadastro.component.html","./src/app/equipamento/cadastro/cadastro.component.ts","./src/app/equipamento/detalhe/detalhe.component.ts","./src/app/equipamento/detalhe/detalhe.component.html","./src/app/equipamento/equipamento.routing.module.ts","./src/app/equipamento/edit/edit.component.ts","./src/app/equipamento/edit/edit.component.html","./src/app/equipamento/equipamento.module.ts"],"sourcesContent":["export class Equipamento {\n  public nomeEquipamento: string;\n  public id!: number;\n  public modelo: string;\n  public serie: string;\n  public fabricante: string;\n  public voltagem: string;\n\n \n  constructor(\n    nomeEquipamento: string,\n    modelo: string,\n    serie: string,\n    fabricante: string,\n    voltagem: string,\n  ) {\n    this.nomeEquipamento = nomeEquipamento;\n    this.modelo = modelo;\n    this.serie = serie;\n    this.fabricante = fabricante;\n    this.voltagem = voltagem;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Equipamento } from '../model/equipamentos.entities';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EquipamentoService {\n \n   //URL = 'http://localhost:3000/equipamentos';\n\n   URL = 'http://localhost:3000/equipamentos';\n   headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private httpClient: HttpClient) {}\n\n\n\n  // save\n  create(data: any): Observable<any> {\n    let API_URL = `${this.URL}`;\n    return this.httpClient.post(API_URL, data)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n\n  getById(id: number): Observable<any> {\n    let API_URL = `${this.URL}/${id}`;\n    return this.httpClient.get<any>(API_URL)\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Listagem de equipamentos\n  list() {\n    return this.httpClient.get(`${this.URL}`);\n  }\n\n\n  // atualizar equipamento\n  update(id: number, data: Equipamento): Observable<any> {\n    let API_URL = `${this.URL}/${id}`;\n    return this.httpClient.put(API_URL, data, { headers: this.headers }).pipe();\n    \n  }\n\n   // Delete equipamento\n   delete(id: number): Observable<any> {\n    var API_URL = `${this.URL}/${id}`;\n    return this.httpClient.delete(API_URL).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Ops! Ocorreu um erro:', error.error.message);\n    } else {\n      console.error(\n        `Código retornado de back-end ${error.status}, ` +\n        `corpo é: ${error.error}`);\n    }\n    return throwError(\n      'Algo ruím aconteceu; por favor, tente novamente mais tarde.');\n  };\n    \n\n\n\n\n\n  \n \n\n  // addEquipamento(equipamento: Equipamento) {\n  //   this.equipamentos.push(equipamento);\n  //   if(localStorage.getItem(Constants.EQUIPAMENTOS_KEY) === null) {\n  //     this.equipamentos.push(equipamento)!;\n  //     localStorage.setItem(Constants.EQUIPAMENTOS_KEY, JSON.stringify(this.equipamentos));\n  //   } else {\n  //     this.equipamentos = JSON.parse(localStorage.getItem(Constants.EQUIPAMENTOS_KEY)!);\n  //     this.equipamentos.push(equipamento)!; \n  //     localStorage.setItem(Constants.EQUIPAMENTOS_KEY, JSON.stringify(this.equipamentos));\n  //   }\n  // }\n\n \n\n  \n  \n  \n\n}\n","<div class=\"container\">\n     <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Equipamentos cadastrados</p>\n\n                        </div>\n                        <div class=\"card-action\">\n\n                            <table class=\"bordered striped centered highlight responsive-table\">\n                                <thead class=\"striped\">\n                                    <tr >\n                                        <th>Nome</th>\n                                        <th>Modelo</th>\n                                        <th>N. de série</th>\n                                        <th>Fabricante</th>\n                                        <th>Voltagem</th>\n                                        <th>Ações</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody *ngFor=\"let item of listaEquipamento\">\n                                    <tr >\n                                        <td>{{item.nomeEquipamento | uppercase}}</td>\n                                        <td>{{item.modelo}}</td>\n                                        <td>{{item.serie}}</td>\n                                        <td>{{item.fabricante}}</td>\n                                        <td>{{item.voltagem}}</td>\n\n                                        <td><a [routerLink]=\"['../detalhe/', item.id]\"><span class=\"material-icons-outlined\">image_search</span></a>\n                                          <a   [routerLink]=\"['../edit/',item.id]\">\n                                            <span class=\"material-icons\">edit</span></a>  \n                                            <span class=\"material-icons\">delete</span></td>\n                                    </tr>\n                                   \n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n    <br><br>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Equipamento } from 'src/app/model/equipamentos.entities';\n\n\n@Component({\n  selector: 'app-listagem',\n  templateUrl: './listagem.component.html',\n  styleUrls: ['./listagem.component.css']\n})\nexport class ListagemComponent implements OnInit {\n\n  @Input() listaEquipamento: any[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" >\n    <h6>Painel > Equipamento > Cadastro</h6>\n    <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-action\">\n                            <div id=\"msg-login\" class=\"card-panel white-text\" [class.red]=\"!this.isSuccess\"\n                                [class.blue]=\"this.isSuccess\" *ngIf=\"this.isShowMessage\">\n                                {{ this.message }}\n                            </div>\n\n                            <form #form=\"ngForm\" (submit)=\"onSubmit()\" novalidate class=\"row col s12 l12\">\n                                <div>\n                                    <div class=\" formGroup input-field col s12 l6\">\n                                        <input id=\"nomeEquipamento\" name=\"nomeEquipamento\" type=\"text\" class=\"validate\"\n                                            [(ngModel)]=\"this.equipamento.nomeEquipamento\"\n                                            pattern=\"(\\s?[A-ZÀ-Ú][a-zà-ú])+(\\s?([A-ZÀ-Ú]|[a-zà-ú]|-|\\d))+\"\n                                            #nomeEqui=\"ngModel\" required>\n                                        <label for=\"nomeEquipamento\">Nome do Equipamento*</label>\n                                        <span [hidden]=\"nomeEqui.valid|| nomeEqui.untouched\">\n                                            Por favor, informe o modelo do equipamento.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"modelo\" name=\"modelo\" type=\"text\" class=\"validate\"\n                                            [(ngModel)]=\"this.equipamento.modelo\" #model=\"ngModel\" required>\n                                        <label for=\"modelo\">Modelo*</label>\n                                        <span [hidden]=\"model.valid|| model.untouched\">\n                                            Por favor, informe o modelo do equipamento.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"serie\" name=\"serie\" type=\"text\" required class=\"validate\"\n                                            [(ngModel)]=\"this.equipamento.serie\" #series=\"ngModel\" required>\n                                        <label for=\"serie\">Número de série*</label>\n                                        <span [hidden]=\"series.valid|| series.untouched\">\n                                            Por favor, informe o número de série do equipamento.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"fabricante\" name=\"fabricante\" type=\"text\" class=\"validate\"\n                                            [(ngModel)]=\"this.equipamento.fabricante\" #fabri=\"ngModel\" required>\n                                        <label for=\"fabricante\">Fabricante*</label>\n                                        <span [hidden]=\"fabri.valid|| fabri.untouched\">\n                                            Por favor, informe o fabricante do equipamento.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"voltagem\" name=\"voltagem\" type=\"text\" class=\"validate\"\n                                            [(ngModel)]=\"this.equipamento.voltagem\" #voltage=\"ngModel\" required>\n                                        <label for=\"voltagem\">Voltagem*</label>\n\n                                    </div>\n\n                                </div>\n                                <button type=\"submit\" class=\"waves-effect waves-light btn red\"\n                                    [disabled]=\"!form.valid\">Salvar</button>\n                                <button type=\"button\" class=\"waves-effect waves-light btn red\"\n                                    (click)=\"limpar()\">Limpar</button>\n\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<app-listagem \n    [listaEquipamento]=\"listaEquipamento\">\n</app-listagem>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Equipamento } from 'src/app/model/equipamentos.entities';\nimport { EquipamentoService } from '../equipamento.service';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n  equipamento!: Equipamento; \n\n  isSubmitted!: boolean;\n  isShowMessage: boolean = false;\n  isShowCadastro: boolean = true;\n  isShowDetalhe: boolean = false;\n  isSuccess!: boolean;\n  message!: string;\n\n  \n  listaEquipamento: any = []\n  listEquipamentosDetalhe: any = []\n\n  constructor(\n    private equipamentoService: EquipamentoService\n  ) { \n    \n  }\n\n\n\n  ngOnInit(): void {\n    this.equipamento = new Equipamento('','','','','');\n    this.listEquipamentos();\n    \n    \n  }\n\n  //função que limpa os input do formulario\n  limpar(): void {\n    this.equipamento.nomeEquipamento = \" \";\n    this.equipamento.modelo = \" \";\n    this.equipamento.serie = \" \";\n    this.equipamento.fabricante = \" \";\n    this.equipamento.voltagem = \" \";\n  }\n\n  // lista dos os equipamentos cadastrados\n  listEquipamentos(){\n    this.equipamentoService.list().subscribe((response)=>{\n      this.listaEquipamento = response;\n    });\n  }\n\n  // função de cadastro de equipamento para o json serve\n  onSubmit(){\n    this.equipamentoService.create(this.equipamento).subscribe((response)=>{\n      this.listEquipamentos();\n      this.limpar();\n      this.isShowMessage = true;\n      this.isSuccess = true;\n      this.message = 'Cadastro do Equipamento realizado com sucesso!';\n    },(error=>{\n\n    }));\n  }\n\n  edit(equipamento: any){\n    this.equipamentoService.update(equipamento.id,equipamento).subscribe((response)=>{\n      this.listEquipamentos();\n    },(error=>{\n\n    }));\n  }\n \n\n // onSubmit(): void { \n    // this.isSubmitted = true;   \n    // this.equipamentoService.saveEquipamento(this.equipamento);\n    // this.limpar();\n    // this.isShowMessage = true;\n    // this.isSuccess = true;\n    // this.message = 'Cadastro do Equipamento realizado com sucesso!';\n    // this.equipamento = new Equipamento('','','','','');    \n\n // }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EquipamentoService } from '../equipamento.service';\n\n@Component({\n  selector: 'app-detalhe',\n  templateUrl: './detalhe.component.html',\n  styleUrls: ['./detalhe.component.css']\n})\nexport class DetalheComponent implements OnInit {\n\n  listEquipamentosDetalhe: any = []\n  equipamento: any;\n  equipamentoId: any = 0;\n  \n\n  constructor(private equipamentoService: EquipamentoService,\n    private route: ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => this.equipamentoId  = params['id'])\n    this.getBy(this.equipamentoId);\n  }\n\n  \n\n  getBy(equipamentoId: number){\n    this.equipamentoService.getById(equipamentoId).subscribe((response)=>{\n     this.listEquipamentosDetalhe = response;\n  });\n }\n\n \n\n}\n","\n<div class=\"container\">\n    <h6>Painel > Equipamento > Detalhe</h6>\n    <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-body\">                            \n                                <div >\n                                    <div class=\"input-field col s12 l6 m3\">                                        \n                                        <label for=\"nomeEquipamento\">Nome do Equipamento:<br> {{listEquipamentosDetalhe.nomeEquipamento}}</label><br>\n                                                                              \n                                    </div>\n                                    <div class=\"input-field col s12 l6 m3\">\n                                       \n                                        <label for=\"modelo\">Modelo:  {{listEquipamentosDetalhe.modelo}}<br/> </label>\n                                        \n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6 m3\">\n                                       \n                                        <label for=\"serie\">Número de série: {{listEquipamentosDetalhe.serie}}<br/> </label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6 m3\">\n                                        \n                                        <label for=\"fabricante\">Fabricante:  {{listEquipamentosDetalhe.fabricante}}<br/> </label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                       \n                                        <label for=\"voltagem\">Voltagem:  {{listEquipamentosDetalhe.voltagem}}<br/> </label>\n                                    </div>\n                                    \n                                </div>\n                                <br/><br/>\n                               <a [routerLink]=\"['../../cadastro/']\" type=\"button\" class=\"waves-effect waves-light btn red m4\">Fechar</a>\n                                \n                               \n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>   \n</div>\n\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CadastroComponent } from \"./cadastro/cadastro.component\";\nimport { ListagemComponent } from \"./cadastro/listagem/listagem.component\";\nimport { DetalheComponent } from \"./detalhe/detalhe.component\";\nimport { EditComponent } from \"./edit/edit.component\";\n\n\n\n\nconst routes: Routes = [\n    {\n      path: \"listagem\",\n      component: ListagemComponent,\n      \n    },\n    {\n      path: \"cadastro\",\n      component: CadastroComponent,\n      \n    },\n    {\n      path: \"\",\n      redirectTo: 'cadastro'\n      \n    },\n    {\n      path: \"edit/:id\",\n      component: EditComponent,\n      \n    },\n    {\n      path: \"detalhe/:id\",\n      component: DetalheComponent,\n      \n    },\n    \n  ];\n  \n  @NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n  })\n  export class EquipamentoRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EquipamentoService } from '../equipamento.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  listEquipamentosEdit: any = []\n  equipamento: any;\n  equipamentoId: any = 0;\n\n  constructor(private equipamentoService: EquipamentoService,\n    private route: ActivatedRoute,\n    private router:Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => this.equipamentoId  = params['id'])\n    this.getBy(this.equipamentoId);\n  }\n\n  getBy(equipamentoId: number){\n    this.equipamentoService.getById(equipamentoId).subscribe((response)=>{\n     this.listEquipamentosEdit = response;\n  });\n }\n\n edit(){\n  this.router.navigate(['/equipamento/cadastro']);\n  this.equipamentoService.update(this.equipamentoId,this.listEquipamentosEdit).subscribe((response)=>{\n   \n },(error=>{\n\n }));\n}\n\n}\n","<div class=\"container\">\n    <h6>Painel > Equipamento > Editar</h6>\n    <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-action\">\n\n                            <form  novalidate class=\"row col s12 l12\">\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"nomeEquipamento\"  type=\"text\"  required class=\"validate\" value=\"{{this.listEquipamentosEdit.nomeEquipamento}}\">\n                                        <label for=\"nomeEquipamento\">Nome do Equipamento</label>                                        \n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"modelo\" type=\"text\"  class=\"validate\" value=\"{{this.listEquipamentosEdit.modelo}}\">\n                                        <label for=\"modelo\">Modelo</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"serie\" type=\"text\"   required class=\"validate\" value=\"{{this.listEquipamentosEdit.serie}}\">\n                                        <label for=\"serie\">Número de série</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"fabricante\" type=\"text\"  required  class=\"validate\" value=\"{{this.listEquipamentosEdit.fabricante}}\">\n                                        <label for=\"fabricante\">Fabricante</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"voltagem\" type=\"text\"  required class=\"validate\" value=\"{{this.listEquipamentosEdit.voltagem}}\">\n                                        <label for=\"voltagem\">Voltagem</label>\n                                    </div>\n                                    \n                                </div>\n                               <button (click)=\"edit()\" type=\"button\" class=\"waves-effect waves-light btn red\">Salvar</button>\n                               <button [routerLink]=\"['../../cadastro']\"type=\"button\" class=\"waves-effect waves-light btn red\">Cancelar</button>\n                                \n                               \n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>   \n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CadastroComponent } from './cadastro/cadastro.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ListagemComponent } from './cadastro/listagem/listagem.component';\nimport { EquipamentoRoutingModule } from './equipamento.routing.module';\n\nimport { FormBuilder, FormsModule } from '@angular/forms';\nimport { DetalheComponent } from './detalhe/detalhe.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EquipamentoService } from './equipamento.service';\n\n\n@NgModule({\n  declarations: [\n    CadastroComponent,\n    EditComponent,\n    ListagemComponent,\n    DetalheComponent\n  ],\n  imports: [\n    CommonModule,\n    EquipamentoRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    \n    \n    \n    \n  ],\n  providers: [    \n    FormBuilder,\n    HttpClientModule,\n    EquipamentoService\n  ]\n})\nexport class EquipamentoModule { }\n"]}