{"version":3,"file":"538.8d69a4fe203331db.js","mappings":"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","names":["constructor","nomeReagente","formula","pesoMolecular","cas","aspecto","quantidade","teorDePureza","this","ReagenteService","httpClient","HttpHeaders","set","create","data","post","URL","pipe","catchError","handleError","getById","id","get","list","update","put","headers","delete","error","ErrorEvent","console","message","status","throwError","i0","factory","ListagemComponent","ngOnInit","selectors","routes","path","component","reagenteService","reagente","Reagente","listReagentes","onSubmit","subscribe","response","limpar","isShowMessage","isSuccess","edit","listaReagentes","CadastroComponent","ctx","redirectTo","route","router","params","reagenteId","getBy","listReagentesEdit","navigate","EditComponent","listReagentesDetalhe","DetalheComponent","ReagenteRoutingModule","RouterModule","ReagenteModule","FormBuilder","HttpClientModule","imports","CommonModule","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/model/reagentes.entities.ts","./src/app/reagente/reagente.service.ts","./src/app/reagente/cadastro/listagem/listagem.component.html","./src/app/reagente/cadastro/listagem/listagem.component.ts","./src/app/reagente/cadastro/cadastro.component.html","./src/app/reagente/reagente.routing.module.ts","./src/app/reagente/cadastro/cadastro.component.ts","./src/app/reagente/edit/edit.component.ts","./src/app/reagente/edit/edit.component.html","./src/app/reagente/detalhe/detalhe.component.ts","./src/app/reagente/detalhe/detalhe.component.html","./src/app/reagente/reagente.module.ts"],"sourcesContent":["export class Reagente {\n    id?: number;\n    nomeReagente?: string;\n    formula?: string;\n    pesoMolecular?: string;\n    cas?: string;\n    aspecto?: string;\n    quantidade?: string;\n    teorDePureza?: string;\n\n    constructor(\n        nomeReagente: string,\n        formula: string,\n        pesoMolecular: string,\n        cas: string,\n        aspecto: string,\n        quantidade: string,\n        teorDePureza: string,\n    ) {\n        this.nomeReagente = nomeReagente;\n        this.formula =  formula;\n        this.pesoMolecular = pesoMolecular;\n        this.cas = cas;\n        this.aspecto = aspecto;\n        this.quantidade = quantidade;\n        this.teorDePureza = teorDePureza;\n    }\n\n}\n\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { Reagente } from '../model/reagentes.entities';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReagenteService {\n\n  URL = 'http://localhost:3000/reagentes';\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\n  reagentes: Reagente[] = [];\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  // salva reagente\n  create(data: any): Observable<any> {\n    let API_URL = `${this.URL}`;\n    return this.httpClient.post(API_URL, data)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  getById(id: number): Observable<any> {\n    let API_URL = `${this.URL}/${id}`;\n    return this.httpClient.get<any>(API_URL)\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n  // Listagem de Reagentes\n  list() {\n    return this.httpClient.get(`${this.URL}`);\n  }\n\n  // atualizar equipamento\n  update(id: number, data: Reagente): Observable<any> {\n    let API_URL = `${this.URL}/${id}`;\n    return this.httpClient.put(API_URL, data, { headers: this.headers }).pipe();\n    \n  }\n\n   // Delete Reagente\n   delete(id: number): Observable<any> {\n    var API_URL = `${this.URL}/${id}`;\n    return this.httpClient.delete(API_URL).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  // Handle API errors\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Ops! Ocorreu um erro:', error.error.message);\n    } else {\n      console.error(\n        `Código retornado de back-end ${error.status}, ` +\n        `corpo é: ${error.error}`);\n    }\n    return throwError(\n      'Algo ruím aconteceu; por favor, tente novamente mais tarde.');\n  };\n\n\n  // addReagente(reagente: Reagente) {\n  //   this.reagentes.push(reagente);\n  //   if(localStorage.getItem(Constants.REAGENTES_KEY) === null) {\n  //     this.reagentes.push(reagente)!;\n  //     localStorage.setItem(Constants.REAGENTES_KEY, JSON.stringify(this.reagentes));\n  //   } else {\n  //     this.reagentes = JSON.parse(localStorage.getItem(Constants.REAGENTES_KEY)!);\n  //     this.reagentes.push(reagente)!; \n  //     localStorage.setItem(Constants.REAGENTES_KEY, JSON.stringify(this.reagentes));\n  //   }\n  // }\n}\n","<div class=\"container\">\n    <div class=\"section\">\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Reagentes cadastrados</p>\n\n                        </div>\n                        <div class=\"card-action\">\n\n                            <table class=\"bordered striped centered highlight responsive-table\">\n                                <thead class=\"striped\">\n                                    <tr>\n                                        <th>Nome</th>\n                                        <th>Formula Molecular</th>\n                                        <th>peso molecular</th>\n                                        <th>Registro cas</th>\n                                        <th>Aspecto</th>\n                                        <th>Quantidade</th>  \n                                        <th>Teor de pureza</th> \n                                        <th>Ações</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody *ngFor=\"let item of listaReagentes\">\n                                    <tr>\n                                        <td>{{item.nomeReagente | uppercase}}</td>\n                                        <td>{{item.formula}}</td>\n                                        <td>{{item.pesoMolecular}}</td>\n                                        <td>{{item.cas}}</td>\n                                        <td>{{item.aspecto}}</td>\n                                        <td>{{item.quantidade}}</td>\n                                        <td>{{item.teorDePureza |percent}}</td>\n                                        <td><a [routerLink]=\"['../detalhe/',item.id]\"><span class=\"material-icons-outlined\">image_search</span></a>\n                                            <a   [routerLink]=\"['../edit/',item.id]\">\n                                              <span class=\"material-icons\" >edit</span></a>  \n                                              <span class=\"material-icons\">delete</span></td>\n                                    </tr>\n                                    \n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n    <br><br>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Reagente } from 'src/app/model/reagentes.entities';\n\n@Component({\n  selector: 'app-listagem',\n  templateUrl: './listagem.component.html',\n  styleUrls: ['./listagem.component.css']\n})\nexport class ListagemComponent implements OnInit {\n\n  @Input() listaReagentes!: Reagente[];\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col s11 m11 l11\"><h6>Painel > Reagente > Cadastro</h6></div>\n        \n    </div>\n    \n    <div class=\"center\">\n\n\n    </div>\n\n    <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Cadastrados de Reagentes</p>\n\n                        </div>\n                        <div class=\"card-action\">\n                            <div id=\"msg-login\" class=\"card-panel white-text\" [class.red]=\"!this.isSuccess\"\n                            [class.blue]=\"this.isSuccess\" *ngIf=\"this.isShowMessage\">\n                            {{ this.message }}\n                        </div>\n                            <form #form=\"ngForm\" (submit)=\"onSubmit()\" novalidate class=\"row col s12 l12\">\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"nomeReagente\" name=\"nomeReagente\" \n                                        [(ngModel)]=\"this.reagente.nomeReagente\" type=\"text\" class=\"validate\"\n                                        pattern=\"(\\s?[A-ZÀ-Ú][a-zà-ú])+(\\s?([A-ZÀ-Ú]|[a-zà-ú]|-|\\d))+\"                                         \n                                        #nomeReag=\"ngModel\" required>\n                                        <label for=\"nomeReagente\">Nome</label>\n                                        <span [hidden]=\"nomeReag.valid|| nomeReag.untouched\">\n                                            Por favor, informe o nome do reagente.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"formula\" name=\"formula\" [(ngModel)]=\"this.reagente.formula\" type=\"text\" class=\"validate\"\n                                        #ngFormu=\"ngModel\" required>\n                                        <label for=\"formula\">Formula molecular</label>\n                                        <span [hidden]=\"ngFormu.valid|| ngFormu.untouched\">\n                                            Por favor, informe a formula do reagente.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"pesoMolecular\" name=\"pesoMolecular\" [(ngModel)]=\"this.reagente.pesoMolecular\" type=\"text\" class=\"validate\"\n                                        #ngPeso=\"ngModel\" required>\n                                        <label for=\"pesoMolecular\">Peso molecular</label>\n                                        <span [hidden]=\"ngPeso.valid|| ngPeso.untouched\">\n                                            Por favor, informe o peso Molecular em g/mol.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"cas\" name=\"cas\" [(ngModel)]=\"this.reagente.cas\" type=\"text\" class=\"validate\"\n                                        #ngCas=\"ngModel\" required>\n                                        <label for=\"cas\">Registro CAS</label>\n                                        <span [hidden]=\"ngCas.valid|| ngCas.untouched\">\n                                            Por favor, informe o número do registro do reagente conforme o fabricante.\n                                        </span>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"aspecto\" name=\"aspecto\" [(ngModel)]=\"this.reagente.aspecto\" type=\"text\" class=\"validate\"\n                                        #ngAspec=\"ngModel\" required>\n                                        <label for=\"aspecto\">Aspecto</label>\n                                        <span [hidden]=\"ngAspec.valid|| ngAspec.untouched\">\n                                            Por favor, informe o aspecto do reagente.\n                                        </span>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"quantidade\" name=\"quantidade\" [(ngModel)]=\"this.reagente.quantidade\" type=\"text\" class=\"validate\"\n                                        #ngQuan=\"ngModel\" required>\n                                        <label for=\"quantidade\">Quantidade</label>\n                                        <span [hidden]=\"ngQuan.valid|| ngQuan.untouched\">\n                                            Por favor, informe a quantidade disponivel de reagente.\n                                        </span>\n                                    </div>\n                                    \n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"teorDePureza\" name=\"teorDePureza\" [(ngModel)]=\"this.reagente.teorDePureza\" type=\"text\" class=\"validate\"\n                                        #ngPure=\"ngModel\" required>\n                                        <label for=\"teorDePureza\">Teor de pureza</label>\n                                        <span [hidden]=\"ngPure.valid|| ngPure.untouched\">\n                                            Por favor, informe o teor de pureza do reagente.\n                                        </span>\n                                    </div>\n                                    \n                                    \n                                </div>\n                               <button class=\"waves-effect waves-light btn red\" [disabled]=\"!form.valid\">Salvar</button>\n                               <button type=\"button\" class=\"waves-effect waves-light btn red\" (click)=\"limpar()\">Limpar</button>\n                                \n                               \n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n  \n</div>\n<app-listagem\n[listaReagentes] = \"listaReagentes\"\n></app-listagem>","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CadastroComponent } from \"./cadastro/cadastro.component\";\nimport { EditComponent } from \"./edit/edit.component\";\nimport { ListagemComponent } from \"./cadastro/listagem/listagem.component\";\nimport { DetalheComponent } from \"./detalhe/detalhe.component\";\n\nconst routes: Routes =  [\n    {\n        path: \"listagem\",\n        component: ListagemComponent,\n        \n      },\n      {\n        path: \"cadastro\",\n        component: CadastroComponent,\n        \n      },\n      {\n        path: \"\",\n        redirectTo: 'cadastro'\n        \n      },\n      {\n        path: \"edit/:id\",\n        component: EditComponent,\n        \n      },\n      {\n        path: \"detalhe/:id\",\n        component: DetalheComponent,\n        \n      },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class ReagenteRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { Reagente } from 'src/app/model/reagentes.entities';\nimport { ReagenteService } from '../reagente.service';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n  reagente!: Reagente;\n  \n\n  isSubmitted!: boolean;\n  isShowMessage: boolean = false;\n  isShowCadastro: boolean = true;\n  isShowDetalhe: boolean = false;\n  isSuccess!: boolean;\n  message!: string;\n \n\n  \n  listaReagentes: any = []\n\n  constructor(\n    private reagenteService: ReagenteService\n  ) { }\n\n  ngOnInit(): void {\n    this.reagente = new Reagente('','','','','','','');\n    this.listReagentes();\n  }\n\n  // função de cadastro de Reagentes para o json serve\n  onSubmit(){\n    this.reagenteService.create(this.reagente).subscribe((response)=>{\n      this.listReagentes();\n      this.limpar();\n      this.isShowMessage = true;\n      this.isSuccess = true;\n      this.message = 'Cadastro de Reagente realizado com sucesso!';\n    },(error=>{\n\n    }));\n  }\n\n  edit(reagente: any){\n    this.reagenteService.update(reagente.id,reagente).subscribe((response)=>{\n      this.listReagentes();\n    },(error=>{\n\n    }));\n  }\n\n \n\n  listReagentes(){\n    this.reagenteService.list().subscribe((response)=>{\n      this.listaReagentes = response;\n    });\n  }\n\n  limpar(): void {\n    this.reagente.nomeReagente = '';\n    this.reagente.formula = '';\n    this.reagente.pesoMolecular = '';\n    this.reagente.cas = '';\n    this.reagente.aspecto = '';\n    this.reagente.quantidade = '';\n    this.reagente.teorDePureza = '';\n  }\n\n   // onSubmit(): void {\n  //   this.isSubmitted = true;\n  //   this.reagenteService.addReagente(this.reagente);\n  //   this.limpar();\n  //   this.isShowMessage = true;\n  //   this.isSuccess = true;\n  //   this.message = 'Cadastro do Reagente realizado com sucesso!';\n  //   this.reagente = new Reagente('','','','','','','');\n  // }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Reagente } from 'src/app/model/reagentes.entities';\nimport { ReagenteService } from '../reagente.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  listReagentesEdit: any = []\n  reagenteId: any = 0;\n\n  reagente!: Reagente;\n\n\n\n\n  constructor(private reagenteService: ReagenteService,\n    private route: ActivatedRoute,\n    private router:Router) { }\n\n    ngOnInit(): void {\n      this.route.params.subscribe(params => this.reagenteId  = params['id'])\n      this.getBy(this.reagenteId);\n      \n    }\n  \n    getBy(reagenteId: number){\n      this.reagenteService.getById(reagenteId).subscribe((response)=>{\n       this.listReagentesEdit = response;\n       \n     });\n   }\n\n   edit(){\n    this.router.navigate(['/reagente/cadastro']);\n    this.reagenteService.update(this.reagenteId,this.listReagentesEdit).subscribe((response)=>{\n     \n   },(error=>{\n  \n   }));\n  }\n\n   \n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col s11 m11 l11\"><h6>Painel > Reagente > Editar</h6></div>\n        \n    </div>\n    \n    <div class=\"center\">\n\n\n    </div>\n\n    <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Editar Reagentes</p>\n\n                        </div>\n                        <div class=\"card-action\">\n\n                            <form formGroup=\"equipamentoForm\" novalidate class=\"row col s12 l12\">\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n       \n                                        <input id=\"nomeReagente\" type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.nomeReagente}}\">\n                                        <label for=\"nomeReagente\">Nome</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"formula\"  type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.formula}}\">\n                                        <label for=\"formula\">Formula molecular</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"pesoMolecular\"   type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.pesoMolecular}}\">\n                                        <label for=\"pesoMolecular\">Peso molecular</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"cas\"  type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.cas}}\">\n                                        <label for=\"cas\">Registro CAS</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"aspecto\"  type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.aspecto}}\">\n                                        <label for=\"aspecto\">Aspecto</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"quantidade\"  type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.quantidade}}\">\n                                        <label for=\"quantidade\">Quantidade</label>\n                                    </div>\n                                    \n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        <input id=\"teorDePureza\"  type=\"text\" class=\"validate\" value=\"{{this.listReagentesEdit.teorDePureza}}\">\n                                        <label for=\"teorDePureza\">Teor de pureza</label>\n                                    </div>\n                                    \n                                    \n                                </div>\n                               <button (click)=\"edit()\" class=\"waves-effect waves-light btn red\">Salvar</button>\n                               <button [routerLink]=\"['../../cadastro']\"type=\"button\" class=\"waves-effect waves-light btn red\">Cancelar</button>\n                                \n                               \n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n   \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ReagenteService } from '../reagente.service';\n\n@Component({\n  selector: 'app-detalhe',\n  templateUrl: './detalhe.component.html',\n  styleUrls: ['./detalhe.component.css']\n})\nexport class DetalheComponent implements OnInit {\n\n  listReagentesDetalhe: any = []\n  reagenteId: any = 0;\n\n  constructor(private reagenteService: ReagenteService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => this.reagenteId  = params['id'])\n    this.getBy(this.reagenteId);\n  }\n\n  getBy(reagenteId: number){\n    this.reagenteService.getById(reagenteId).subscribe((response)=>{\n     this.listReagentesDetalhe = response;\n     \n   });\n }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col s11 m11 l11\"><h6>Painel > Reagente > Detalhe</h6></div>\n        \n    </div>\n    \n    <div class=\"center\">\n\n\n    </div>\n\n    <div class=\"section\">\n\n\n        <!--   Icon Section   -->\n        <div class=\"row\">\n            <div class=\"col s12 m3\">\n                <div class=\"card horizontal z-depth-5\">\n                    <div class=\"card-stacked\">\n                        <div class=\"card-content\">\n                            <p>Cadastrados de Reagentes</p>\n\n                        </div>\n                        <div class=\"card-action\">\n\n                            \n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                       \n                                        <label for=\"nomeReagente\">Nome: {{listReagentesDetalhe.nomeReagente}}</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"formula\">Formula molecular: {{listReagentesDetalhe.formula}}</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"pesoMolecular\">Peso molecular: {{listReagentesDetalhe.pesoMolecular}}</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"cas\">Registro CAS:{{listReagentesDetalhe.cas}}</label>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"aspecto\">Aspecto:{{listReagentesDetalhe.aspecto}}</label>\n                                    </div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"quantidade\">Quantidade:{{listReagentesDetalhe.quantidade}}</label>\n                                    </div>\n                                    \n                                </div>\n                                <div>\n                                    <div class=\"input-field col s12 l6\">\n                                        \n                                        <label for=\"teorDePureza\">Teor de pureza:{{listReagentesDetalhe.teorDePureza |percent}}</label>\n                                    </div>\n                                    \n                                    \n                                </div>\n                               \n                               <a  [routerLink]=\"['../../cadastro/']\" type=\"button\" class=\"waves-effect waves-light btn red\">Fechar</a>\n                                \n                               \n                            \n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n   \n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CadastroComponent } from './cadastro/cadastro.component';\nimport { ListagemComponent } from './cadastro/listagem/listagem.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ReagenteRoutingModule } from './reagente.routing.module';\nimport { FormBuilder, FormsModule } from '@angular/forms';\nimport { DetalheComponent } from './detalhe/detalhe.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReagenteService } from './reagente.service';\n\n\n\n@NgModule({\n  declarations: [\n    CadastroComponent,\n    ListagemComponent,\n    EditComponent,\n    DetalheComponent\n  ],\n  imports: [\n    CommonModule,\n    ReagenteRoutingModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [    \n    FormBuilder,\n    HttpClientModule,\n    ReagenteService\n  ]\n})\nexport class ReagenteModule { }\n"]}